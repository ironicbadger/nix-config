# Advanced Python development environment with direnv
# This template supports both Python venvs and Nix development environments
# Place this file as .envrc in your Python project directories

# Check if we're using a Nix environment (shell.nix or flake.nix exists)
if [ -f "shell.nix" ] || [ -f "flake.nix" ]; then
    echo "Nix environment detected, using use_nix"
    use_nix
elif [ -f "default.nix" ]; then
    echo "Nix environment detected, using use_nix"
    use_nix
else
    # If no Nix environment, use Python venv
    # Check if .venv directory exists, if not create it
    if [ ! -d ".venv" ]; then
        echo "Creating Python virtual environment in .venv directory..."
        python -m venv .venv
    fi

    # Activate the virtual environment
    source .venv/bin/activate

    # Export PATH to include the virtual environment's bin directory
    PATH_add .venv/bin

    echo "Python virtual environment activated. Use 'pip install' to install packages."
fi

# Add any project-specific environment variables below
# export PYTHONPATH=$PWD:$PYTHONPATH
# export FLASK_APP=app.py
# export FLASK_ENV=development
